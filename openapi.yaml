openapi: 3.0.3
info:
  contact:
    email: info@autoscout24.ch
    name: AutoScout24 Engineering Team
    url: https://developers.autoscout24.ch
  description: Explore the versatile AutoScout24 REST API for seamless integration.
  title: AutoScout24 API
  version: 1.0.1

servers:
  - url: "https://api.autoscout24.ch"

security:
  - BearerAuth: [ ]

tags:
  - name: Listing Search
  - name: Make
  - name: Model
  - name: Version
paths:
  /public/v1/listings/facets:
    post:
      tags:
        - Listing Search
      description: Retrieve facets based on specified query parameters.
      operationId: GetFacets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingFacets"
        required: true
      responses:
        "200":
          description: Facets successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetsResponse"
  /public/v1/makes:
    get:
      operationId: GetMakes
      description: Returns a sorted list of makes for a vehicle category.
      tags:
        - Make
      parameters:
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Makes for a vehicle category returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakeResponse"
  /public/v1/makes/key/{makeKey}/models:
    get:
      tags:
        - Model
      description: Returns a sorted list of models by makeKey and vehicleCategory.
      operationId: GetModels
      parameters:
        - name: makeKey
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Models for a makeKey and vehicle category returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponse"
  /public/v1/reference-data:
    get:
      tags:
        - Reference data
      description: Returns reference data.
      operationId: GetReferenceData
      parameters:
        - name: vehicleCategory
          in: query
          description: Filter reference data by vehicle category.
          required: false
          schema:
            $ref: "#/components/schemas/VehicleCategory"
      responses:
        "200":
          description: Reference data successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenceDataResponse"
  /public/v1/sellers/{sellerId}/listings:
    get:
      operationId: GetSellersSellerIdListings
      description: Returns a page of listings for the specified seller ID.
      tags:
        - Listing
      parameters:
        - $ref: '#/components/parameters/sellerIdPathParam'
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        '200':
          description: Listings returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListingPage"
  /public/v1/sellers/{sellerId}/listings/{listingId}:
    parameters:
      - $ref: '#/components/parameters/sellerIdPathParam'
      - $ref: '#/components/parameters/listingIdPathParam'
    get:
      operationId: GetSellersSellerIdListingsListingId
      description: Returns a listing for the specified seller ID and listing ID.
      tags:
        - Listing
      responses:
        '200':
          description: Listing returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SellerListing"
  /public/v1/vehicle-categories:
    get:
      tags:
        - Reference data
      description: Returns vehicle categories.
      operationId: GetVehicleCategories
      responses:
        "200":
          description: Vehicle categories successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleCategoriesResponse"
  /public/v1/versions/{versionId}:
    get:
      operationId: GetVersionsVersionId
      description: Returns a version for the specified version ID.
      tags:
        - Version
      parameters:
        - $ref: '#/components/parameters/versionIdPathParam'
      responses:
        '200':
          description: Version returned.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/VersionShared"
components:
  parameters:
    vehicleCategoryQueryParam:
      in: query
      name: vehicleCategory
      description: Vehicle category to retrieve.
      required: true
      schema:
        $ref: "#/components/schemas/VehicleCategory"
    listingIdPathParam:
      in: path
      name: listingId
      description: Listing ID.
      required: true
      schema:
        type: integer
        format: int64
      example: 1620023
    pageQueryParam:
      in: query
      name: page
      description: Specify the page number for data retrieval (defaults to 0).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 999999
        default: 0
      example: 0
    sellerIdPathParam:
      in: path
      name: sellerId
      description: Seller ID.
      required: true
      schema:
        type: integer
        format: int64
      example: 1923
    sizeQueryParam:
      in: query
      name: size
      description: Number of records per page (defaults to 20, maximum 2000).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 2000
        default: 20
      example: 20
    versionIdPathParam:
      in: path
      name: versionId
      description: Version ID.
      required: true
      schema:
        type: integer
        format: int64
      example: 1923
  schemas:
    ListingFacets:
      description: Represents the request structure for listing facets.
      required:
        - facets
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ListingQuery'
        facets:
          description: Facets to retrieve.
          type: array
          items:
            $ref: '#/components/schemas/ListingFacet'
    ListingQuery:
      description: Represents the query parameters for filtering listings.
      type: object
      properties:
        fuelTypes:
          description: Filter listings by fuel types.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FuelType'
          example: [ "electric", "petrol" ]
        makeModelVersions:
          description: Filter listings by make and model combinations.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ListingQuery_MakeModelVersion'
          example: [ { "makeKey": "bmw", "modelGroupKey": "3-series", "modelKey": "320d" } ]
        vehicleCategories:
          description: Filter listings by vehicle categories.
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/VehicleCategory"
          example: [ "car", "utility" ]
    ListingQuery_MakeModelVersion:
      description: Represents the make and model version for querying.
      type: object
      properties:
        makeKey:
          type: string
          example: "bmw"
        modelGroupKey:
          type: string
          example: "3-series"
        modelKey:
          type: string
          example: "320d"
    ListingFacet:
      description: Definition of facet to retrieve.
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Facet"
      example: { "name": "makeKeys" }
    SellerListingPage:
      description: Represents a page of Listing entities.
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              description: List of listing entries on the current page.
              type: array
              items:
                $ref: "#/components/schemas/SellerListing"
    FacetsResponse:
      description: Retrieved facets.
      type: object
      properties:
        facets:
          description: Retrieved facets.
          type: object
          additionalProperties:
            description: Facet name.
            type: object
            additionalProperties:
              description: Facet value.
              type: integer
              format: int64
      example: { "makeKeys": { "audi": 100, "bmw": 200 } }
    MakeResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Make"
    Make:
      description: Represents the data for the Make entity.
      type: object
      properties:
        key:
          description: Unique key of the make.
          type: string
          example: "audi"
        name:
          description: Display name of the make.
          type: string
          example: "Audi"
    ModelResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Model"
    Model:
      description: Represents the data for the Model entity.
      type: object
      properties:
        key:
          description: Unique key of the model.
          type: string
          example: "a4-allroad"
        name:
          description: Display name of the model.
          type: string
          example: "A4 ALLROAD"
        group:
          $ref: "#/components/schemas/Model_ModelGroup"
    Model_ModelGroup:
      type: object
      properties:
        key:
          type: string
          example: "a-series"
        name:
          type: string
          example: "A Series"
    Page:
      type: object
      properties:
        empty:
          type: boolean
          example: false
        numberOfElements:
          description: Actual number of elements in a page.
          type: integer
          format: int32
          example: 18
        size:
          description: Size of a page.
          type: integer
          format: int32
          example: 20
        totalElements:
          description: Total number of elements.
          type: integer
          format: int64
          example: 138
        first:
          description: Is first page.
          type: boolean
          example: false
        last:
          description: Is last page.
          type: boolean
          example: true
        number:
          description: Page number.
          type: integer
          format: int32
          example: 6
        totalPages:
          description: Total number of pages.
          type: integer
          format: int32
          example: 7
    Facet:
      type: string
      enum:
        - makeKeys
        - modelGroupKeys
        - modelKeys
    FuelType:
      type: string
      enum:
        - cng-petrol
        - diesel
        - electric
        - ethanol-petrol
        - hev-diesel
        - hev-petrol
        - hydrogen
        - lpg-petrol
        - mhev-diesel
        - mhev-petrol
        - petrol
        - phev-diesel
        - phev-petrol
        - two-stroke-mixture
    Image:
      description: Represents the data for the Image entity.
      properties:
        url:
          description: URL of the image.
          type: string
          format: uri
          example: https://images.autoscout24.ch/853/11878853/0.jpg
    VehicleCategory:
      type: string
      enum:
        - car
        - utility
        - motorcycle
        - truck
        - camper
        - trailer
    ReferenceDataResponse:
      description: Represents the reference data.
      type: object
      properties:
        bodyTypes:
          description: Vehicle body types.
          type: array
          items:
            $ref: "#/components/schemas/BodyType"
        conditionTypes:
          description: Vehicle condition types.
          type: array
          items:
            $ref: "#/components/schemas/ConditionType"
        colors:
          description: Vehicle colors.
          type: array
          items:
            $ref: "#/components/schemas/Color"
        driveTypes:
          description: Vehicle drive types.
          type: array
          items:
            $ref: "#/components/schemas/DriveType"
        equipmentSearchAttributes:
          description: Vehicle equipment search attributes.
          type: array
          items:
            $ref: "#/components/schemas/EquipmentSearchAttribute"
        equipmentSearchAttributeGroups:
          description: Vehicle equipment search attribute groups.
          type: array
          items:
            $ref: "#/components/schemas/EquipmentSearchAttributeGroup"
        equipmentSearchAttributeGroupMapping:
          type: object
          description: Mapping between EquipmentSearchAttribute and EquipmentSearchAttributeGroup.
          additionalProperties:
            type: string
            nullable: true
          example:
            "xenon-headlights": "headlights"
        fuelTypes:
          description: Vehicle fuel types.
          type: array
          items:
            $ref: "#/components/schemas/FuelType"
        transmissionTypes:
          description: Vehicle transmission types.
          type: array
          items:
            $ref: "#/components/schemas/TransmissionType"
    SellerListing:
      description: Represents a set of fields for Seller's Listing objects.
      properties:
        availableForLeasing:
          description: Flag indicating if the listing is available for leasing.
          type: boolean
          example: false
        bodyType:
          description: Shape of the vehicle body.
          allOf:
            - $ref: "#/components/schemas/BodyType"
          example: suv
        certificationNumber:
          description: Registration document number; in Swiss market known as Typenscheinnummer.
          type: string
          minLength: 6
          maxLength: 6
          pattern: '^\w{6}$'
          example:
            1AE899
        cubicCapacity:
          description: Volume of the engines cylinders in cubic centimeters.
          type: integer
          format: int32
          minimum: 1
          maximum: 29999
          example: 2995
        cylinders:
          description: Number of cylinders of the engine.
          type: integer
          format: int32
          minimum: 1
          maximum: 99
          example: 6
        doors:
          description: Number of doors of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 9
          example: 5
        driveType:
          description: Drive type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/DriveType"
          example: all
        firstRegistrationDate:
          description: First registration date of the vehicle.
          type: string
          format: date
          example: '2020-12-15'
        firstRegistrationYear:
          description: Year when the vehicle was first registered.
          type: integer
          format: int32
          minimum: 1800
          maximum: 9999
          example: 2020
        fuelType:
          description: Fuel type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/FuelType"
          example: petrol
        id:
          description: Listing's ID.
          type: integer
          format: int64
          example: 1620023
        images:
          description: Listing images.
          type: array
          items:
            $ref: "#/components/schemas/Image"
        kiloWatts:
          description: Power the engine produces in kW.
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 250
        listPrice:
          description: List price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999
          example: 65400
        live:
          description: Flag indicating if a listing is live.
          type: boolean
          example: true
        makeKey:
          description: Unique key of the make.
          type: string
          minLength: 1
          maxLength: 64
          example: audi
        mileage:
          description: Distance in km that the vehicle has run.
          type: integer
          format: int32
          minimum: 0
          maximum: 99999999
          example: 17500
        modelKey:
          description: Key of the model (unique on the make level).
          type: string
          minLength: 1
          maxLength: 64
          example: a6
        price:
          description: Price of the vehicle.
          type: number
          format: double
          minimum: 1.0
          maximum: 9999999
          example: 47000
        seats:
          description: Number of seats of the vehicle.
          type: integer
          format: int32
          minimum: 1
          maximum: 199
          example: 5
        transmissionType:
          description: Transmission type of the vehicle.
          allOf:
            - $ref: "#/components/schemas/TransmissionType"
          example: automatic
        tuned:
          description: Flag indicating if the vehicle was altered to make it nicer or faster.
          type: boolean
          example: false
        vehicleCategory:
          description: Category of the vehicle.
          allOf:
            - $ref: "#/components/schemas/VehicleCategory"
          example: car
        versionFullName:
          description: Full version name of the vehicle.
          type: string
          maxLength: 128
          example: A6 3.0 55 TFSI quattro S-Tronic
        versionId:
          description: Version ID of a listing.
          type: integer
          format: int64
          example: 100201

    TransmissionType:
      type: string
      enum:
        - automatic
        - automatic-stepless
        - semi-automatic
        - manual
    BodyType:
      type: string
      enum:
        - alcove
        - atv-quad
        - boat-trailer
        - box
        - box-double-cab
        - box-glazed
        - bridge
        - bridge-double-cab
        - bus
        - cab-over
        - cabin
        - cabriolet
        - car
        - caravan
        - car-trailer
        - car-transporter
        - chassis-cab
        - chopper
        - construction-trailer
        - coupe
        - custom-bike
        - e-bike
        - estate
        - horse-trailer
        - integrated
        - livestock-trailer
        - low-bed-trailer
        - minivan
        - moped
        - motocross-bike
        - motorcycle-trailer
        - motorhome
        - naked-bike
        - off-road-bike
        - other
        - pickup
        - platform
        - reefer
        - sales-trailer
        - saloon
        - sanitary-trailer
        - scooter
        - semi-integrated
        - semi-trailer
        - sidecar
        - small-car
        - snowmobile
        - special-vehicles-trailer
        - street-bike
        - suitcase
        - supermoto
        - suv
        - tank-body
        - tipper
        - touring
        - trailer
        - trike
        - uploader
        - wood-transporter
    ConditionType:
      type: string
      enum:
        - new
        - used
        - demonstration
        - oldtimer
        - pre-registered
    Color:
      type: string
      enum:
        - anthracite
        - beige
        - black
        - blue
        - bordeaux
        - brown
        - gray
        - gold
        - green
        - multicolored
        - orange
        - pink
        - red
        - silver
        - turquoise
        - violet
        - white
        - yellow
        - other
    DriveType:
      type: string
      enum:
        - rear
        - front
        - all
    EquipmentSearchAttribute:
      type: string
      enum:
        - abs
        - active-brake-assistant
        - adaptive-cruise-control
        - adaptive-headlights
        - additional-instrumentation
        - air-condition
        - air-suspension
        - alarm-system
        - alcantara
        - alloy-wheels
        - android-auto
        - anti-theft-device
        - apple-carplay
        - assisted-parking
        - audio-system
        - automatic-air-condition
        - auxiliary-heating
        - backrest
        - blind-spot-system
        - bluetooth-interface
        - 360-camera
        - catalytic-converter
        - chrome-parts
        - cloth-seats
        - cover
        - crash-bar
        - cruise-control
        - custom-exhaust
        - custom-handlebar
        - dab-radio
        - detachable-towbar
        - differential-locking
        - double-disc-brake
        - double-seat
        - electric-seat
        - electric-tailgate
        - esp
        - fast-charging
        - floorboard
        - full-partial-casing
        - hands-free-set
        - hardtop
        - head-up-display
        - heated-grips
        - heated-seats
        - hydraulic-system
        - isofix
        - keyless
        - kitchen
        - lane-assistant
        - laser-headlights
        - leather-seats
        - led
        - liftgate
        - luggage-rack
        - navigation
        - panorama-roof
        - parking-sensor-front
        - parking-sensor-rear
        - partial-leather-seats
        - portable-navigation-system
        - rear-camera
        - reinforced-suspension
        - retarder-intarder
        - retractable-towbar
        - saddlebag
        - shower
        - sliding-door
        - solo-seat
        - speaker
        - special-paint
        - spoked-wheels
        - sport-seats
        - start-stop-system
        - suitcase
        - sunroof
        - tank-bag
        - toilet
        - top-case
        - towbar
        - traction-control
        - tv
        - twin-headlights
        - ventilated-seats
        - windshield
        - wing-doors
        - xenon-headlights
        - electric-windows
    EquipmentSearchAttributeGroup:
      type: string
      enum:
        - air-condition
        - headlights
        - navigation-system
        - seat-covers
        - towbar
    VehicleCategoriesResponse:
      type: object
      properties:
        vehicleCategories:
          description: Retrieved vehicle categories.
          type: array
          items:
            $ref: '#/components/schemas/VehicleCategory'
    VersionShared:
      description: Represents a shared set of fields for different Version objects.
      properties:
        source:
          description: Version source.
          allOf:
            - $ref: "#/components/schemas/VersionSource"
          example: eurotax
        externalId:
          description: |
            Version's external ID, usually provided and used by a data provider as the version's key/identificator
            in the origin system.
          type: string
          maxLength: 64
          example: 100200401
    VersionSource:
      type: string
      enum:
        - eurotax
        - auto-i
  securitySchemes:
    BearerAuth:
      bearerFormat: auth-scheme
      description: "Bearer HTTP authentication (Authorization: Bearer <access_token>)"
      scheme: bearer
      type: http
