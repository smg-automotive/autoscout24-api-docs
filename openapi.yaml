openapi: 3.0.3
info:
  contact:
    email: info@autoscout24.ch
    name: AutoScout24 Engineering Team
    url: https://developers.autoscout24.ch
  description: Explore the versatile AutoScout24 REST API for seamless integration.
  title: AutoScout24 API
  version: 1.0.1

servers:
  - url: 'https://api.autoscout24.ch'

security:
  - BearerAuth: [ ]

tags:
  - name: Listing Search

paths:
  /public/v1/listings/facets:
    post:
      tags:
        - Listing Search
      description: Retrieve facets based on specified query parameters.
      operationId: GetFacets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingFacetsDto'
        required: true
      responses:
        "200":
          description: Facets successfully returned.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FacetsDto'
  /public/v1/makes:
    get:
      tags:
        - Catalogue Search
      description: Retrieve all makes for a vehicle category
      operationId: getMakes
      parameters:
        - name: vehicleCategory
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/VehicleCategory'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: All makes for a vehicle category returned
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MakeResponse'
  /public/v1/makes/key/{makeKey}/models:
    get:
      tags:
        - Catalogue Search
      description: Retrieve models by makeKey and vehicleCategory
      operationId: getModels
      parameters:
        - name: makeKey
          in: path
          required: true
          schema:
            type: string
        - name: vehicleCategory
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/VehicleCategory'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: All models for a vehicle category returned
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelResponse'
components:
  parameters:
    pageQueryParam:
      in: query
      name: page
      description: Specify the page number for data retrieval (defaults to 0).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 999999
        default: 0
      example: 0
    sizeQueryParam:
      in: query
      name: size
      description: Number of records per page (defaults to 25, maximum 2000).
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 2000
        default: 25
      example: 15
  schemas:
    ListingFacetsDto:
      description: Represents the request structure for listing facets.
      required:
        - facets
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ListingQueryDto'
        facets:
          description: Facets to retrieve.
          type: array
          items:
            $ref: '#/components/schemas/ListingFacet'
    ListingQueryDto:
      description: Represents the query parameters for filtering listings.
      type: object
      properties:
        fuelTypes:
          description: Filter listings by fuel types.
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - cng-petrol
              - diesel
              - electric
              - ethanol-petrol
              - hev-diesel
              - hev-petrol
              - hydrogen
              - lpg-petrol
              - mhev-diesel
              - mhev-petrol
              - petrol
              - phev-diesel
              - phev-petrol
              - two-stroke-mixture
        makeModelVersions:
          description: Filter listings by make and model combinations.
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ListingQueryDto$MakeModelVersion'
        vehicleCategories:
          description: Filter listings by vehicle categories.
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - car
              - utility
              - motorcycle
              - truck
              - camper
              - trailer
    ListingQueryDto$MakeModelVersion:
      description: Represents the make and model version for querying.
      type: object
      properties:
        makeKey:
          type: string
        modelGroupKey:
          type: string
        modelKey:
          type: string
        versionFullName:
          type: string
    ListingFacet:
      description: Definition of facet to retrieve.
      type: object
      properties:
        name:
          description: The name of the facet.
          type: string
          enum:
            - makeKeys
            - modelGroupKeys
            - modelKeys
    FacetsDto:
      description: Retrieved facets.
      type: object
      properties:
        facets:
          description: Retrieved facets.
          type: object
          additionalProperties:
            description: Facet name.
            type: object
            additionalProperties:
              description: Facet value.
              type: integer
              format: int64
    Make:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
    MakeResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Make'
        empty:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
    Model:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        group:
          $ref: '#/components/schemas/Model$Group'
    Model$Group:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
    ModelResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Model'
        empty:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
    VehicleCategory:
      type: string
      enum:
        - car
        - utility
        - motorcycle
        - truck
        - camper
        - trailer
  securitySchemes:
    BearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication (Authorization: Bearer <access_token>)'
      scheme: bearer
      type: http
