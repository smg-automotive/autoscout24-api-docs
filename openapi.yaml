openapi: 3.0.3
info:
  contact:
    email: info@autoscout24.ch
    name: AutoScout24 Engineering Team
    url: https://dev.autoscout24.ch
  description: The AutoScout24 REST API.
  title: AutoScout24 API
  version: 1.0.1

servers:
  - url: "https://api.autoscout24.ch"

security:
  - BearerAuth: [ ]

tags:
  - name: Make
  - name: Model
paths:
  /public/v1/makes:
    get:
      operationId: GetMakes
      description: Returns a sorted list of makes for a vehicle category.
      tags:
        - Make
      parameters:
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Makes for a vehicle category returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakeResponse"
  /public/v1/makes/key/{makeKey}/models:
    get:
      tags:
        - Model
      description: Returns a sorted list of models by makeKey and vehicleCategory.
      operationId: GetModels
      parameters:
        - name: makeKey
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/vehicleCategoryQueryParam"
        - $ref: "#/components/parameters/pageQueryParam"
        - $ref: "#/components/parameters/sizeQueryParam"
      responses:
        "200":
          description: Models for a makeKey and vehicle category returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponse"
components:
  parameters:
    vehicleCategoryQueryParam:
      in: query
      name: vehicleCategory
      description: Vehicle category to retrieve.
      required: true
      schema:
        $ref: "#/components/schemas/VehicleCategory"
    pageQueryParam:
      in: query
      name: page
      description: Page number to retrieve.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 999999
        default: 0
      example: 0
    sizeQueryParam:
      in: query
      name: size
      description: Number of records per page.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 2000
        default: 20
      example: 15
  schemas:
    Make:
      description: Represents the data for the Make entity.
      type: object
      properties:
        key:
          description: Unique key of the make.
          type: string
          example: "audi"
        name:
          description: Display name of the make.
          type: string
          example: "Audi"
    MakeResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Make"
    ModelGroup:
      type: object
      properties:
        key:
          type: string
          example: "a-series"
        name:
          type: string
          example: "A Series"
    Model:
      description: Represents the data for the Model entity.
      type: object
      properties:
        key:
          description: Unique key of the model.
          type: string
          example: "a4-allroad"
        name:
          description: Display name of the model.
          type: string
          example: "A4 ALLROAD"
        group:
          $ref: "#/components/schemas/ModelGroup"
    ModelResponse:
      allOf:
        - $ref: "#/components/schemas/Page"
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: "#/components/schemas/Model"
    Page:
      type: object
      properties:
        empty:
          type: boolean
          example: false
        numberOfElements:
          description: Actual number of elements in a page.
          type: integer
          format: int32
          example: 18
        size:
          description: Size of a page.
          type: integer
          format: int32
          example: 20
        totalElements:
          description: Total number of elements.
          type: integer
          format: int64
          example: 138
        first:
          description: Is first page.
          type: boolean
          example: false
        last:
          description: Is last page.
          type: boolean
          example: true
        number:
          description: Page number.
          type: integer
          format: int32
          example: 6
        totalPages:
          description: Total number of pages.
          type: integer
          format: int32
          example: 7
    VehicleCategory:
      type: string
      enum:
        - car
        - utility
        - motorcycle
        - truck
        - camper
        - trailer
  securitySchemes:
    BearerAuth:
      bearerFormat: auth-scheme
      description: "Bearer HTTP authentication (Authorization: Bearer <access_token>)"
      scheme: bearer
      type: http
